@page "/portal"

@inject HttpClient Http

<h3>Microservices Portal</h3>

<div class="container">
    <h4>Service Integrations</h4>
    <p>This portal provides access to all microservices.</p>
    <!-- Placeholder for service-specific components -->
    <div class="row">
        <div class="col-md-4">
            <h5>User Service</h5>
            <button class="btn btn-primary" @onclick="LoadUserData">Load User Data</button>
            <div>@userData</div>
        </div>
        <div class="col-md-4">
            <h5>Movie Service</h5>
            <button class="btn btn-primary" @onclick="LoadMovieData">Load Movie Data</button>
            <div>@movieData</div>
        </div>
        <div class="col-md-4">
            <h5>Recommendation Service</h5>
            <button class="btn btn-primary" @onclick="LoadRecommendations">Load Recommendations</button>
            <div>@recommendationData</div>
        </div>
    </div>
</div>

@code {
    private string userData = "No data loaded.";
    private string movieData = "No data loaded.";
    private string recommendationData = "No data loaded.";

    private async Task LoadUserData()
    {
        var response = await Http.GetAsync("http://localhost:5003/api/users");
        if (response.IsSuccessStatusCode)
        {
            userData = await response.Content.ReadAsStringAsync();
        }
        else
        {
            userData = "Failed to load user data.";
        }
    }

    private async Task LoadMovieData()
    {
        var response = await Http.GetAsync("http://localhost:5001/api/movies");
        if (response.IsSuccessStatusCode)
        {
            movieData = await response.Content.ReadAsStringAsync();
        }
        else
        {
            movieData = "Failed to load movie data.";
        }
    }

    private async Task LoadRecommendations()
    {
        var response = await Http.GetAsync("http://localhost:5004/api/recommendations");
        if (response.IsSuccessStatusCode)
        {
            recommendationData = await response.Content.ReadAsStringAsync();
        }
        else
        {
            recommendationData = "Failed to load recommendations.";
        }
    }
}
